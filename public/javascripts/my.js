// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var App, AppView, DateList, DateListView, DateView, Expense, ExpenseList, ExpenseView, Expenses;
    Expense = Backbone.Model.extend({
      idAttribute: "_id",
      defaults: function() {
        return {
          year: 0,
          month: 0,
          date: 0,
          remark: "",
          price: 0
        };
      }
    });
    DateList = Backbone.Collection.extend({
      dates: {},
      setDate: function(key, expense) {
        return this.dates[key] = expense;
      },
      getDate: function(key) {
        return this.dates[key];
      }
    });
    ExpenseList = Backbone.Collection.extend({
      model: Expense,
      url: "/expenses",
      initialize: function() {
        this.dateList = new DateList();
        this.on("add", function(expense) {
          var key;
          key = this.generate(expense);
          this.dateList.setDate(key, expense);
          return this.trigger("add-" + key, expense);
        }, this);
        this.on("change:price", function(expense, value) {
          var key;
          key = this.generate(expense);
          return this.trigger("refreshTotal-" + key, expense, value);
        }, this);
        this.on("destroy", function(expense) {
          var key;
          console.log(expense);
          key = this.generate(expense);
          return this.trigger("refreshTotal-" + key, expense);
        }, this);
        return this.on("reset", function(expenses) {
          return expenses.each(function(expense) {
            var key;
            key = this.generate(expense);
            this.dateList.setDate(key, expense);
            return this.trigger("add-" + key, expense);
          }, this);
        }, this);
      },
      generate: function(expense) {
        return expense.get("year") + "/" + expense.get("month") + "/" + expense.get("date");
      }
    });
    Expenses = new ExpenseList();
    ExpenseView = Backbone.View.extend({
      tagName: "li",
      className: "expense-item",
      template: _.template($('#item-template').html()),
      events: {
        "click a.destroy": "clear",
        "dblclick .view": "edit",
        "keypress .edit input": "updateOnEnter",
        "blur .edit input": "close"
      },
      initialize: function() {
        this.model.bind('change', this.render, this);
        return this.model.bind('destroy', this.remove, this);
      },
      render: function() {
        this.$el.html(this.template(this.model.toJSON()));
        this.input = this.$('.edit');
        this.remark = this.$('.remark-field');
        this.price = this.$('.price-field');
        return this;
      },
      edit: function() {
        this.$el.addClass("editing");
        return this.input.focus();
      },
      updateOnEnter: function(e) {
        if (e.keyCode === 13) {
          return this.close();
        }
      },
      close: function() {
        this.model.save({
          remark: this.remark.val(),
          price: parseInt(this.price.val(), 10)
        });
        return this.$el.removeClass("editing");
      },
      clear: function() {
        return this.model.destroy();
      }
    });
    DateListView = Backbone.View.extend({
      el: $('#date-list'),
      startDate: 25,
      initialize: function() {
        var i, target, today, view, _results;
        today = new Date();
        i = this.startDate;
        _results = [];
        while (true) {
          target = new Date(today.getFullYear(), today.getMonth(), i);
          view = new DateView(target.getFullYear(), target.getMonth() + 1, target.getDate());
          this.$el.prepend(view.render().el);
          i = target.getDate() + 1;
          if (i === today.getDate()) {
            break;
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }
    });
    DateView = Backbone.View.extend({
      tagName: 'li',
      template: _.template($('#date-template').html()),
      events: {
        "keypress .new-remark-field + .new-price-field": "addExpense"
      },
      initialize: function(year, month, date) {
        Expenses.bind("add-" + year + "/" + month + "/" + date, this.addOne, this);
        Expenses.bind("refreshTotal-" + year + "/" + month + "/" + date, this.culcTotal, this);
        this.year = year;
        this.month = month;
        this.date = date;
        this.id = "new-" + this.month + "-" + this.date;
        return this.total = 0;
      },
      render: function() {
        this.$el.attr({
          id: this.id
        });
        this.$el.html(this.template(this.total));
        this.remark = this.$el.find(".new-remark-field");
        this.price = this.$el.find(".new-price-field");
        return this;
      },
      addOne: function(expense) {
        var view;
        console.log(expense);
        view = new ExpenseView({
          model: expense
        });
        this.$("#expense-list").append(view.render().el);
        this.total += expense.get("price");
        return this.$el.children(".total").html("日計: " + this.total + "円");
      },
      culcTotal: function() {
        var expenses;
        expenses = Expenses.filter(function(expense) {
          return expense.get("year") === this.year && expense.get("month") === this.month && expense.get("date") === this.date;
        }, this);
        this.total = expenses.reduce(function(num, expense) {
          return num + expense.get("price");
        }, 0);
        return this.$el.children(".total").html("日計: " + this.total + "円");
      },
      addExpense: function(e) {
        if (e.keyCode !== 13) {
          return;
        }
        Expenses.create({
          year: this.year,
          month: this.month,
          date: this.date,
          remark: this.remark.val(),
          price: parseInt(this.price.val(), 10)
        });
        this.remark.val("");
        return this.price.val("");
      }
    });
    AppView = Backbone.View.extend({
      el: $("#expenseapp"),
      initialize: function() {
        var list;
        Expenses.bind("all", this.render, this);
        this.footer = $('footer');
        this.main = $('#main');
        list = new DateListView();
        return Expenses.fetch();
      },
      render: function() {
        this.main.show();
        this.footer.show();
        return this;
      }
    });
    return App = new AppView();
  });

}).call(this);
